[2025-05-28T09:13:24.508Z] [START] 🚀 Starting LSTM training process
[2025-05-28T09:13:24.508Z] [INFO] 📊 Model ID: a6eeea9c-a8c9-49a5-94c3-231208ace1f3
[2025-05-28T09:13:24.508Z] [INFO] 🔧 Algorithm: LSTM
[2025-05-28T09:13:24.508Z] [INFO] 📈 Dataset: 40000 train, 10000 test samples
[2025-05-28T09:13:24.850Z] ✅ Using Python: python
[2025-05-28T09:13:24.850Z] 🚀 Starting training script execution...
[2025-05-28T09:13:26.994Z] [STDERR] 2025-05-28 16:13:26.994648: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[2025-05-28T09:13:29.029Z] [STDERR] 2025-05-28 16:13:29.029463: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
[2025-05-28T09:13:33.548Z] [STDERR] [Python Script] Loading config from C:\Users\Tung Tran\OneDrive - OrionMatrix\Urus\studio\temp\config_a6eeea9c-a8c9-49a5-94c3-231208ace1f3.json
[2025-05-28T09:13:33.549Z] [STDERR] [Python Script] Override layers = 5
[Python Script] Override learning_rate = 0.0019
[Python Script] Loading training data from C:\Users\Tung Tran\OneDrive - OrionMatrix\Urus\studio\temp\train_a6eeea9c-a8c9-49a5-94c3-231208ace1f3.json
[2025-05-28T09:13:33.766Z] [STDERR] [Python Script] Loaded 40000 training records
[2025-05-28T09:13:33.767Z] [STDERR] [Python Script] Loading test data from C:\Users\Tung Tran\OneDrive - OrionMatrix\Urus\studio\temp\test_a6eeea9c-a8c9-49a5-94c3-231208ace1f3.json
[2025-05-28T09:13:33.817Z] [STDERR] [Python Script] Loaded 10000 test records
[Python Script] Using data from API files
[2025-05-28T09:13:34.028Z] [STDERR] [Python Script] Using API train/test split: 40000/10000
[2025-05-28T09:13:34.029Z] [STDERR] [Python Script] Using features: ['open', 'high', 'low', 'close', 'volume']
[2025-05-28T09:13:34.031Z] [STDERR] [Python Script] Scaling data...
[2025-05-28T09:13:34.035Z] [STDERR] [Python Script] Scaled data shape: (50000, 5)
[Python Script] Creating sequences with 60 timesteps...
[2025-05-28T09:13:34.147Z] [STDERR] [Python Script] Created sequences: X shape=(49940, 60, 5), y shape=(49940,)
[2025-05-28T09:13:34.184Z] [STDERR] [Python Script] Split sizes: Train=31961, Val=7991, Test=9988
[Python Script] Building LSTM model (5 layers, 50 units)...
[2025-05-28T09:13:34.208Z] [STDERR] 2025-05-28 16:13:34.208633: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: SSE3 SSE4.1 SSE4.2 AVX AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
[2025-05-28T09:13:34.301Z] [STDERR] C:\Users\Tung Tran\OneDrive - OrionMatrix\Urus\studio\.venv\Lib\site-packages\keras\src\layers\rnn\rnn.py:199: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(**kwargs)
[2025-05-28T09:13:34.573Z] [STDERR] Model: "sequential"
┌─────────────────────────────────┬────────────────────────┬───────────────┐
│ Layer (type)                    │ Output Shape           │       Param # │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lstm (LSTM)                     │ (None, 60, 50)         │        11,200 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout (Dropout)               │ (None, 60, 50)         │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lstm_1 (LSTM)                   │ (None, 60, 50)         │        20,200 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_1 (Dropout)             │ (None, 60, 50)         │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lstm_2 (LSTM)                   │ (None, 60, 50)         │        20,200 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_2 (Dropout)             │ (None, 60, 50)         │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lstm_3 (LSTM)                   │ (None, 60, 50)         │        20,200 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_3 (Dropout)             │ (None, 60, 50)         │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ lstm_4 (LSTM)                   │ (None, 50)             │        20,200 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dropout_4 (Dropout)             │ (None, 50)             │             0 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 1)              │            51 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 92,051 (359.57 KB)
 Trainable params: 92,051 (359.57 KB)
 Non-trainable params: 0 (0.00 B)

[Python Script] Compiling model (LR: 0.0019)...
[2025-05-28T09:13:34.581Z] [STDERR] [Python Script] Starting training (100 epochs, Batch: 32)...
[2025-05-28T10:02:54.450Z] [STDOUT] Epoch 31: early stopping
Restoring model weights from the end of the best epoch: 21.
[2025-05-28T10:02:54.468Z] [STDERR] [Python Script] Training finished.
[Python Script] Evaluating model on test set...
[2025-05-28T10:03:06.275Z] [STDERR] [Python Script] Evaluation Results - RMSE: 0.0057, MAE: 0.0038
[2025-05-28T10:03:06.278Z] [STDERR] [Python Script] Saving model to C:\Users\Tung Tran\OneDrive - OrionMatrix\Urus\studio\models\a6eeea9c-a8c9-49a5-94c3-231208ace1f3\lstm_model_a6eeea9c-a8c9-49a5-94c3-231208ace1f3.h5
WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`.
[2025-05-28T10:03:06.332Z] [STDOUT] {"success": true, "message": "LSTM training completed successfully. Final Val Loss: 0.0001", "results": {"rmse": 0.005681349355329134, "mae": 0.003791861003264785, "model_path": "C:\\Users\\Tung Tran\\OneDrive - OrionMatrix\\Urus\\studio\\models\\a6eeea9c-a8c9-49a5-94c3-231208ace1f3\\lstm_model_a6eeea9c-a8c9-49a5-94c3-231208ace1f3.h5"}}
[2025-05-28T10:03:07.600Z] 🏁 Training process finished with code: 0
[2025-05-28T10:03:08.255Z] ✅ Model a6eeea9c-a8c9-49a5-94c3-231208ace1f3 training completed
