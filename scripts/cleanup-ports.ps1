# Cleanup Ports Script for Urus Studio
# D·ªçn d·∫πp c√°c ports ƒëang b·ªã s·ª≠ d·ª•ng

Write-Host "üßπ D·ªçn d·∫πp ports cho Urus Studio..." -ForegroundColor Green

# Script t·ª± ƒë·ªông cleanup port 9002
# Ch·∫°y script n√†y tr∆∞·ªõc khi kh·ªüi ƒë·ªông server ƒë·ªÉ tr√°nh l·ªói EADDRINUSE

Write-Host "ƒêang ki·ªÉm tra v√† cleanup port 9002..." -ForegroundColor Yellow

# T√¨m process ƒëang s·ª≠ d·ª•ng port 9002
$processes = netstat -ano | findstr :9002

if ($processes) {
    Write-Host "T√¨m th·∫•y process ƒëang s·ª≠ d·ª•ng port 9002:" -ForegroundColor Red
    $processes | ForEach-Object { Write-Host $_ -ForegroundColor Red }
    
    # L·∫•y PID t·ª´ output
    $pids = $processes | ForEach-Object {
        $parts = $_ -split '\s+'
        $parts[-1]  # L·∫•y ph·∫ßn t·ª≠ cu·ªëi c√πng (PID)
    } | Sort-Object -Unique
    
    foreach ($pid in $pids) {
        try {
            Write-Host "ƒêang kill process PID: $pid" -ForegroundColor Yellow
            taskkill /PID $pid /F
            Write-Host "ƒê√£ kill th√†nh c√¥ng process PID: $pid" -ForegroundColor Green
        }
        catch {
            Write-Host "Kh√¥ng th·ªÉ kill process PID: $pid - $($_.Exception.Message)" -ForegroundColor Red
        }
    }
    
    # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ port ƒë∆∞·ª£c gi·∫£i ph√≥ng
    Start-Sleep -Seconds 2
    
    # Ki·ªÉm tra l·∫°i
    $remaining = netstat -ano | findstr :9002
    if ($remaining) {
        Write-Host "V·∫´n c√≤n process s·ª≠ d·ª•ng port 9002:" -ForegroundColor Red
        $remaining | ForEach-Object { Write-Host $_ -ForegroundColor Red }
    } else {
        Write-Host "Port 9002 ƒë√£ ƒë∆∞·ª£c gi·∫£i ph√≥ng th√†nh c√¥ng!" -ForegroundColor Green
    }
} else {
    Write-Host "Port 9002 kh√¥ng b·ªã s·ª≠ d·ª•ng." -ForegroundColor Green
}

Write-Host "Cleanup ho√†n t·∫•t!" -ForegroundColor Green

Write-Host "üéâ Ho√†n th√†nh d·ªçn d·∫πp ports!" -ForegroundColor Green
Write-Host "üí° B√¢y gi·ªù b·∫°n c√≥ th·ªÉ ch·∫°y: npm run dev" -ForegroundColor Cyan 