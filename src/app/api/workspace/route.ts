import { NextRequest, NextResponse } from 'next/server';
import { isWorkspaceRequest, identifyWorkspaceAction, executeWorkspaceAction } from '@/ai/tools/workspace-tools';

export async function POST(request: NextRequest) {
  try {
    const { message } = await request.json();
    
    if (!message) {
      return NextResponse.json({ 
        success: false, 
        error: 'Message is required' 
      }, { status: 400 });
    }
    
    console.log(`ü§ñ [WorkspaceAPI] Processing message: "${message}"`);
    
    // Check if this is a workspace request
    if (!isWorkspaceRequest(message)) {
      return NextResponse.json({
        success: true,
        isWorkspaceRequest: false,
        response: 'ü§ñ ƒê√¢y kh√¥ng ph·∫£i y√™u c·∫ßu workspace. T√¥i c√≥ th·ªÉ gi√∫p b·∫°n v·ªõi:\n- Thu th·∫≠p d·ªØ li·ªáu crypto\n- Qu·∫£n l√Ω jobs\n- Tin t·ª©c th·ªã tr∆∞·ªùng\n- D·ªØ li·ªáu real-time\n\nH√£y th·ª≠ c√°c v√≠ d·ª•!'
      });
    }
    
    // Identify and execute workspace action
    const workspaceRequest = identifyWorkspaceAction(message);
    
    if (workspaceRequest.action === 'none') {
      return NextResponse.json({
        success: true,
        isWorkspaceRequest: true,
        response: 'ü§ñ T√¥i nh·∫≠n ra ƒë√¢y l√† y√™u c·∫ßu workspace, nh∆∞ng ch∆∞a hi·ªÉu r√µ. Vui l√≤ng th·ª≠ c√°c v√≠ d·ª• c·ª• th·ªÉ h∆°n.'
      });
    }
    
    // Execute workspace action
    const workspaceResponse = await executeWorkspaceAction(workspaceRequest.action, workspaceRequest.params);
    
    return NextResponse.json({
      success: true,
      isWorkspaceRequest: true,
      action: workspaceRequest.action,
      params: workspaceRequest.params,
      response: `ü§ñ **Yinsen ƒë√£ th·ª±c hi·ªán y√™u c·∫ßu workspace:**\n\n${workspaceResponse}\n\nüí° *T√¥i c√≥ th·ªÉ gi√∫p b·∫°n qu·∫£n l√Ω thu th·∫≠p d·ªØ li·ªáu, jobs, tin t·ª©c v√† d·ªØ li·ªáu real-time!*`
    });
    
  } catch (error: any) {
    console.error('‚ùå [WorkspaceAPI] Error:', error);
    return NextResponse.json({
      success: false,
      error: error?.message || 'Unknown error',
      response: `‚ùå L·ªói khi x·ª≠ l√Ω y√™u c·∫ßu workspace: ${error?.message || 'Unknown error'}`
    }, { status: 500 });
  }
} 